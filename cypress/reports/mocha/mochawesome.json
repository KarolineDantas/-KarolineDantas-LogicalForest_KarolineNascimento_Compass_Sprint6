{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 3,
    "pending": 0,
    "failures": 3,
    "start": "2022-09-17T23:39:23.998Z",
    "end": "2022-09-17T23:39:27.531Z",
    "duration": 3533,
    "testsRegistered": 6,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a0f1e627-9c8e-483e-8c03-99f808a789ae",
      "title": "",
      "fullFile": "cypress/integration/primeiroFluxo.spec.js",
      "file": "cypress/integration/primeiroFluxo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "622c87e9-f585-4c59-a8b5-9d67d2a4b2fc",
          "title": "Primeiro fluxo para automação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro de usuário com sucesso",
              "fullTitle": "Primeiro fluxo para automação Cadastro de usuário com sucesso",
              "timedOut": null,
              "duration": 417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_factory.default.gerarUsuario;\n_serverest.default.cadastrarUsuarioComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(resposta);\n});",
              "err": {},
              "uuid": "f28d43bc-f987-455f-be0d-a75400ec604a",
              "parentUUID": "622c87e9-f585-4c59-a8b5-9d67d2a4b2fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8428a7b1-d14a-4e3c-a0b3-6276285868fa",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve consultar os produtos da loja",
                  "fullTitle": "Primeiro fluxo para automação Logar com sucesso Deve consultar os produtos da loja",
                  "timedOut": null,
                  "duration": 524,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(resposta);\n});",
                  "err": {},
                  "uuid": "e0069b12-5e8d-471f-a813-95f1efdedafc",
                  "parentUUID": "8428a7b1-d14a-4e3c-a0b3-6276285868fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar um produto pelo _id sem sucesso",
                  "fullTitle": "Primeiro fluxo para automação Logar com sucesso Deve buscar um produto pelo _id sem sucesso",
                  "timedOut": null,
                  "duration": 682,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoPorIdSemSucesso();\ncy.get('@idProduto').then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos-id', 400);\n  _validaServerest.default.validarBuscaDeProdutosPorIdSemSucesso(resposta);\n});",
                  "err": {
                    "message": "ReferenceError: _id is not defined",
                    "estack": "ReferenceError: _id is not defined\n    at Function.validarBuscaDeProdutosPorIdSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\primeiroFluxo.spec.js:645:52)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\primeiroFluxo.spec.js:234:34)",
                    "diff": null
                  },
                  "uuid": "72f48b29-9823-4a21-bd96-d4904ff64355",
                  "parentUUID": "8428a7b1-d14a-4e3c-a0b3-6276285868fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar um produto pelo _id com sucesso",
                  "fullTitle": "Primeiro fluxo para automação Logar com sucesso Deve buscar um produto pelo _id com sucesso",
                  "timedOut": null,
                  "duration": 689,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoPorId();\ncy.get('@idProduto').then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos-id', 200);\n  _validaServerest.default.validarBuscaDeProdutosPorId(resposta);\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must be object, but receive undefined",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must be object, but receive undefined\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:227:13)",
                    "diff": null
                  },
                  "uuid": "58a428cb-9d7e-4bd0-8162-c6f91cbf98ee",
                  "parentUUID": "8428a7b1-d14a-4e3c-a0b3-6276285868fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar carrinho com sucesso",
                  "fullTitle": "Primeiro fluxo para automação Logar com sucesso Deve cadastrar carrinho com sucesso",
                  "timedOut": null,
                  "duration": 655,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 201);\n  _validaServerest.default.validarCadastroDeCarrinhoComSucesso(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Não é permitido ter mais de 1 carrinho' to equal 'Cadastro realizado com sucesso'",
                    "estack": "AssertionError: expected 'Não é permitido ter mais de 1 carrinho' to equal 'Cadastro realizado com sucesso'\n    at Function.validarCadastroDeCarrinhoComSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\primeiroFluxo.spec.js:650:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\primeiroFluxo.spec.js:251:34)",
                    "diff": "- 'Não é permitido ter mais de 1 carrinho'\n+ 'Cadastro realizado com sucesso'\n"
                  },
                  "uuid": "5702047b-4e16-4949-b06f-d0fe2576a8d3",
                  "parentUUID": "8428a7b1-d14a-4e3c-a0b3-6276285868fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir compra com sucesso",
                  "fullTitle": "Primeiro fluxo para automação Logar com sucesso Deve concluir compra com sucesso",
                  "timedOut": null,
                  "duration": 508,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 200);\n  _validaServerest.default.validarConclusaoDeComprasSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "7d9cc2d7-f416-48b5-9de2-0823e062cfa9",
                  "parentUUID": "8428a7b1-d14a-4e3c-a0b3-6276285868fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0069b12-5e8d-471f-a813-95f1efdedafc",
                "7d9cc2d7-f416-48b5-9de2-0823e062cfa9"
              ],
              "failures": [
                "72f48b29-9823-4a21-bd96-d4904ff64355",
                "58a428cb-9d7e-4bd0-8162-c6f91cbf98ee",
                "5702047b-4e16-4949-b06f-d0fe2576a8d3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3058,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "f28d43bc-f987-455f-be0d-a75400ec604a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}