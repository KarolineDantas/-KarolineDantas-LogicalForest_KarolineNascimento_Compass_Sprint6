{
  "stats": {
    "suites": 3,
    "tests": 9,
    "passes": 4,
    "pending": 0,
    "failures": 5,
    "start": "2022-09-17T23:39:32.179Z",
    "end": "2022-09-17T23:39:35.999Z",
    "duration": 3820,
    "testsRegistered": 9,
    "passPercent": 44.44444444444444,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d26b70df-d3d0-4092-90f4-9d6c989c5675",
      "title": "",
      "fullFile": "cypress/integration/quartoFluxo.spec.js",
      "file": "cypress/integration/quartoFluxo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b06b7f3-c207-4ae5-8afd-a75a0bdf6073",
          "title": "Quarto fluxo para automação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logar sem sucesso",
              "fullTitle": "Quarto fluxo para automação Logar sem sucesso",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "8e6045f8-491d-4dbe-8f7a-e119b19c49ef",
              "parentUUID": "8b06b7f3-c207-4ae5-8afd-a75a0bdf6073",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login sem email",
              "fullTitle": "Quarto fluxo para automação Tentativa de login sem email",
              "timedOut": null,
              "duration": 336,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.loginSemEmail().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemEmail(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'email não pode ficar em branco'",
                "estack": "AssertionError: expected undefined to equal 'email não pode ficar em branco'\n    at Function.validarLoginSemEmail (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:706:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:212:32)",
                "diff": null
              },
              "uuid": "27371828-e600-481b-b0ec-86320bdc6b68",
              "parentUUID": "8b06b7f3-c207-4ae5-8afd-a75a0bdf6073",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login sem senha",
              "fullTitle": "Quarto fluxo para automação Tentativa de login sem senha",
              "timedOut": null,
              "duration": 342,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.loginSemSenha().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemSenha(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'email não pode ficar em branco'",
                "estack": "AssertionError: expected undefined to equal 'email não pode ficar em branco'\n    at Function.validarLoginSemSenha (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:710:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:219:32)",
                "diff": null
              },
              "uuid": "3fb73cb5-7aef-41f9-a969-8c99c1b03e46",
              "parentUUID": "8b06b7f3-c207-4ae5-8afd-a75a0bdf6073",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com e-mail inválido",
              "fullTitle": "Quarto fluxo para automação Tentativa de login com e-mail inválido",
              "timedOut": null,
              "duration": 320,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.loginEmailInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginEmailInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'Email deve ser um email válido'",
                "estack": "AssertionError: expected undefined to equal 'Email deve ser um email válido'\n    at Function.validarLoginEmailInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:714:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:226:32)",
                "diff": null
              },
              "uuid": "cc271cff-7b10-40b6-805f-12c8006ac732",
              "parentUUID": "8b06b7f3-c207-4ae5-8afd-a75a0bdf6073",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve tentar cadastrar carrinho sem token",
              "fullTitle": "Quarto fluxo para automação Deve tentar cadastrar carrinho sem token",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroDeCarrinhoSemToken().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 401);\n  _validaServerest.default.validarCadastroDeCarrinhoSemToken(resposta);\n});",
              "err": {},
              "uuid": "3a24eefb-6250-48ae-af61-715cabb3315b",
              "parentUUID": "8b06b7f3-c207-4ae5-8afd-a75a0bdf6073",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "36d60241-d873-4a4f-b3ec-eb66139ab466",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar carrinho com sucesso",
                  "fullTitle": "Quarto fluxo para automação Logar com sucesso Deve cadastrar carrinho com sucesso",
                  "timedOut": null,
                  "duration": 519,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 201);\n  _validaServerest.default.validarCadastroDeCarrinhoComSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "9a772468-1177-40b3-a3a9-1c829160cf29",
                  "parentUUID": "36d60241-d873-4a4f-b3ec-eb66139ab466",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar mais de um carrinho para o mesmo usuário",
                  "fullTitle": "Quarto fluxo para automação Logar com sucesso Deve tentar cadastrar mais de um carrinho para o mesmo usuário",
                  "timedOut": null,
                  "duration": 499,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoParaMesmoUsuario().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 401);\n  _validaServerest.default.validarCadastroDeCarrinhoParaMesmoUsuario(resposta);\n});",
                  "err": {},
                  "uuid": "93654569-9ebb-476b-b258-ea42337df72f",
                  "parentUUID": "36d60241-d873-4a4f-b3ec-eb66139ab466",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a772468-1177-40b3-a3a9-1c829160cf29",
                "93654569-9ebb-476b-b258-ea42337df72f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1018,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d9eca2d0-26cc-45c0-bcb0-764517539987",
              "title": "Logar",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve cadastrar carrinho com sucesso",
                  "fullTitle": "Quarto fluxo para automação Logar Deve cadastrar carrinho com sucesso",
                  "timedOut": null,
                  "duration": 641,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 201);\n  _validaServerest.default.validarCadastroDeCarrinhoComSucesso(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais' to equal 'Cadastro realizado com sucesso'",
                    "estack": "AssertionError: expected 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais' to equal 'Cadastro realizado com sucesso'\n    at Function.validarCadastroDeCarrinhoComSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:674:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:275:34)",
                    "diff": "- 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'\n+ 'Cadastro realizado com sucesso'\n"
                  },
                  "uuid": "58f1b4a7-eba6-43f9-b1c4-9a47fd005d94",
                  "parentUUID": "d9eca2d0-26cc-45c0-bcb0-764517539987",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar carrinho com produto duplicado",
                  "fullTitle": "Quarto fluxo para automação Logar Deve tentar cadastrar carrinho com produto duplicado",
                  "timedOut": null,
                  "duration": 658,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComProdutoDuplicado().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 400);\n  _validaServerest.default.validarCadastroDeCarrinhoComProdutoDuplicado(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais' to equal 'Não é permitido possuir produto duplicado'",
                    "estack": "AssertionError: expected 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais' to equal 'Não é permitido possuir produto duplicado'\n    at Function.validarCadastroDeCarrinhoComProdutoDuplicado (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:744:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\quartoFluxo.spec.js:282:34)",
                    "diff": "- 'Token de acesso ausente, inválido, expirado ou usuário do token não existe mais'\n+ 'Não é permitido possuir produto duplicado'\n"
                  },
                  "uuid": "bbf4f9d5-da46-45b4-ba14-8680666562bf",
                  "parentUUID": "d9eca2d0-26cc-45c0-bcb0-764517539987",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "58f1b4a7-eba6-43f9-b1c4-9a47fd005d94",
                "bbf4f9d5-da46-45b4-ba14-8680666562bf"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1299,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "8e6045f8-491d-4dbe-8f7a-e119b19c49ef",
            "3a24eefb-6250-48ae-af61-715cabb3315b"
          ],
          "failures": [
            "27371828-e600-481b-b0ec-86320bdc6b68",
            "3fb73cb5-7aef-41f9-a969-8c99c1b03e46",
            "cc271cff-7b10-40b6-805f-12c8006ac732"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1412,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}