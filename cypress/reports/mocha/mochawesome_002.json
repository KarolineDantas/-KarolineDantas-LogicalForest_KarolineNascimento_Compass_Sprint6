{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 7,
    "pending": 0,
    "failures": 3,
    "start": "2022-09-16T15:36:48.021Z",
    "end": "2022-09-16T15:36:50.956Z",
    "duration": 2935,
    "testsRegistered": 10,
    "passPercent": 70,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2443de65-2958-4b9a-9756-ebb9d25fd72a",
      "title": "",
      "fullFile": "cypress/integration/terceiroFluxo.spec.js",
      "file": "cypress/integration/terceiroFluxo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
          "title": "Casos de teste do fluxo 3",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro de usuário com sucesso",
              "fullTitle": "Casos de teste do fluxo 3 Cadastro de usuário com sucesso",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_factory.default.gerarUsuario;\n_serverest.default.cadastrarUsuarioComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(resposta);\n});",
              "err": {},
              "uuid": "18fdb75e-bafc-4a42-a7cd-d8252ec2fdc0",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com email já utilizado",
              "fullTitle": "Casos de teste do fluxo 3 Tentativa de cadastro com email já utilizado",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "c3b1d685-4cdb-4f15-9f32-844f54ed48f0",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com email inválido",
              "fullTitle": "Casos de teste do fluxo 3 Tentativa de cadastro com email inválido",
              "timedOut": null,
              "duration": 354,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioEmailInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioEmailInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'Email deve ser um email válido'",
                "estack": "AssertionError: expected undefined to equal 'Email deve ser um email válido'\n    at Function.validarCadastroUsuarioEmailInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\terceiroFluxo.spec.js:520:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\terceiroFluxo.spec.js:209:32)",
                "diff": null
              },
              "uuid": "4e7e538e-49b2-48a3-92fe-8439d81367ee",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com senha inválida",
              "fullTitle": "Casos de teste do fluxo 3 Tentativa de cadastro com senha inválida",
              "timedOut": null,
              "duration": 336,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioSenhaInvalida().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioSenhaInvalida(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'Este email já está sendo usado' to equal 'Senha deve conter no mínimo 4 caracteres'",
                "estack": "AssertionError: expected 'Este email já está sendo usado' to equal 'Senha deve conter no mínimo 4 caracteres'\n    at Function.validarCadastroUsuarioSenhaInvalida (https://serverest.dev/__cypress/tests?p=cypress\\integration\\terceiroFluxo.spec.js:524:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\terceiroFluxo.spec.js:216:32)",
                "diff": "- 'Este email já está sendo usado'\n+ 'Senha deve conter no mínimo 4 caracteres'\n"
              },
              "uuid": "0960ab98-7818-48a5-a3ae-62e97076326b",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com nome inválido",
              "fullTitle": "Casos de teste do fluxo 3 Tentativa de cadastro com nome inválido",
              "timedOut": null,
              "duration": 312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioNomeInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioNomeInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'Este email já está sendo usado' to equal 'Nome inválido, tente novamente'",
                "estack": "AssertionError: expected 'Este email já está sendo usado' to equal 'Nome inválido, tente novamente'\n    at Function.validarCadastroUsuarioNomeInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\terceiroFluxo.spec.js:528:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\terceiroFluxo.spec.js:223:32)",
                "diff": "- 'Este email já está sendo usado'\n+ 'Nome inválido, tente novamente'\n"
              },
              "uuid": "443f7042-3615-4fe3-9a53-dd7ab7e8416b",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve consultar os produtos da loja",
              "fullTitle": "Casos de teste do fluxo 3 Deve consultar os produtos da loja",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarProdutos().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(resposta);\n});",
              "err": {},
              "uuid": "818ab3ef-f49f-4a3f-ac3c-956fdcf18994",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logar sem sucesso",
              "fullTitle": "Casos de teste do fluxo 3 Logar sem sucesso",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "064a79fd-feb9-498f-9526-cb6bc7068f0f",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de conclusão de compra",
              "fullTitle": "Casos de teste do fluxo 3 Tentativa de conclusão de compra",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.conclusaoCompra().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 401);\n  _validaServerest.default.validarConclusaoDeComprasSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "c263d9aa-123f-4ffd-92f9-4e49abfdc4ef",
              "parentUUID": "177f4a75-2a70-4a7f-9a8e-dde2ad254610",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "661b4015-e3af-480e-b4d2-8db803d6910d",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve editar uma informação do usuário",
                  "fullTitle": "Casos de teste do fluxo 3 Logar com sucesso Deve editar uma informação do usuário",
                  "timedOut": null,
                  "duration": 369,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "4be21c81-eff1-443b-bf6b-6b293b535d8f",
                  "parentUUID": "661b4015-e3af-480e-b4d2-8db803d6910d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir compra com sucesso",
                  "fullTitle": "Casos de teste do fluxo 3 Logar com sucesso Deve concluir compra com sucesso",
                  "timedOut": null,
                  "duration": 514,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 200);\n  _validaServerest.default.validarConclusaoDeComprasSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "0087aeb6-e359-4a87-ac9f-052d829d23e4",
                  "parentUUID": "661b4015-e3af-480e-b4d2-8db803d6910d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4be21c81-eff1-443b-bf6b-6b293b535d8f",
                "0087aeb6-e359-4a87-ac9f-052d829d23e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 883,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "18fdb75e-bafc-4a42-a7cd-d8252ec2fdc0",
            "c3b1d685-4cdb-4f15-9f32-844f54ed48f0",
            "818ab3ef-f49f-4a3f-ac3c-956fdcf18994",
            "064a79fd-feb9-498f-9526-cb6bc7068f0f",
            "c263d9aa-123f-4ffd-92f9-4e49abfdc4ef"
          ],
          "failures": [
            "4e7e538e-49b2-48a3-92fe-8439d81367ee",
            "0960ab98-7818-48a5-a3ae-62e97076326b",
            "443f7042-3615-4fe3-9a53-dd7ab7e8416b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1987,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}