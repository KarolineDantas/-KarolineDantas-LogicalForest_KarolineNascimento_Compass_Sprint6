{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 11,
    "pending": 0,
    "failures": 3,
    "start": "2022-09-27T20:08:52.841Z",
    "end": "2022-09-27T20:09:00.642Z",
    "duration": 7801,
    "testsRegistered": 14,
    "passPercent": 78.57142857142857,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "570a1f93-68a9-4c17-a976-08a3f29e0daa",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "443da0e0-eb22-426b-b8b1-f540d1b152a9",
          "title": "Testes para a rota produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro de usuário com sucesso",
              "fullTitle": "Testes para a rota produtos Cadastro de usuário com sucesso",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_factory.default.gerarUsuario;\n_serverest.default.cadastrarUsuarioComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroUsuarioSucesso(resposta);\n});",
              "err": {},
              "uuid": "db2d942f-43ec-44f6-ab17-48d1a2dc3910",
              "parentUUID": "443da0e0-eb22-426b-b8b1-f540d1b152a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro de usuário não administrador com sucesso",
              "fullTitle": "Testes para a rota produtos Cadastro de usuário não administrador com sucesso",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioNaoAdm().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroUsuarioSucesso(resposta);\n});",
              "err": {},
              "uuid": "e659d415-a90e-4f19-be63-2421da6dae79",
              "parentUUID": "443da0e0-eb22-426b-b8b1-f540d1b152a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "148323e6-6e75-4e33-b7de-10b2610f8f12",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve consultar os produtos da loja",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve consultar os produtos da loja",
                  "timedOut": null,
                  "duration": 585,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(resposta);\n});",
                  "err": {},
                  "uuid": "c444391b-da11-4c3b-93ed-cf8e9e2ee182",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar um produto sem estar logado",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar um produto sem estar logado",
                  "timedOut": null,
                  "duration": 549,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoSemLogin().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 401);\n  _validaServerest.default.validarCadastroProdutoSemLogin(resposta);\n});",
                  "err": {},
                  "uuid": "01e4033b-d670-4db9-97c2-e1ff6c9f394a",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar um produto já existente",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar um produto já existente",
                  "timedOut": null,
                  "duration": 551,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoDuplicado().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 400);\n  _validaServerest.default.validarProdutoDuplicado(resposta);\n});",
                  "err": {},
                  "uuid": "21d152e0-2c94-4d74-b320-2d2d6cc599c1",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar um novo produto com sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve cadastrar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 566,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 200);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "7ddd6763-b881-4216-aef8-7cb59a37d33d",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar produto com quantidade menor que 0",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar produto com quantidade menor que 0",
                  "timedOut": null,
                  "duration": 785,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoQtdeInvalida().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 400);\n  _validaServerest.default.validarProdutoQtdeInvalida(resposta);\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:258:13)",
                    "diff": null
                  },
                  "uuid": "fc80ab6a-267a-4b0f-bab4-d887f0d8c324",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar produto com preço negativo",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar produto com preço negativo",
                  "timedOut": null,
                  "duration": 749,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoPrecoInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 400);\n  _validaServerest.default.validarProdutoPrecoInvalido(resposta);\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:258:13)",
                    "diff": null
                  },
                  "uuid": "0aa358de-527d-4211-96ca-bb6e94c747cf",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar um produto com sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve editar um produto com sucesso",
                  "timedOut": null,
                  "duration": 556,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'put-produtos-id', 200);\n  _validaServerest.default.validarEdicaoProdutoSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "cc697553-8363-42ce-9699-ba6b75b8ecd6",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar um produto sem nome",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve cadastrar um produto sem nome",
                  "timedOut": null,
                  "duration": 721,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroSemNome().then(resposta => {\n  _validaServerest.default.validarProdutoSemNome(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Já existe produto com esse nome' to equal 'Cadastro realizado com sucesso'",
                    "estack": "AssertionError: expected 'Já existe produto com esse nome' to equal 'Cadastro realizado com sucesso'\n    at Function.validarProdutoSemNome (https://serverest.dev/__cypress/tests?p=cypress\\integration\\produtos.spec.js:959:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\produtos.spec.js:295:34)",
                    "diff": "- 'Já existe produto com esse nome'\n+ 'Cadastro realizado com sucesso'\n"
                  },
                  "uuid": "ce8bef97-62af-42cc-8e8c-c6e53e82775d",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar o produto pelo id sem sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve buscar o produto pelo id sem sucesso",
                  "timedOut": null,
                  "duration": 565,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoPeloIdSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos-id', 400);\n  _validaServerest.default.validarBuscaDeProdutoPeloIdSemSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "e127b4dc-1a12-4cac-8e49-3e04eba1941a",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar o produto pelo id com sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve buscar o produto pelo id com sucesso",
                  "timedOut": null,
                  "duration": 551,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPeloId().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos-id', 200);\n  _validaServerest.default.validarBuscaDeProdutoPeloId(resposta);\n});",
                  "err": {},
                  "uuid": "3c36bdf0-fe46-4d7c-8dfe-9478a1aec526",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c444391b-da11-4c3b-93ed-cf8e9e2ee182",
                "01e4033b-d670-4db9-97c2-e1ff6c9f394a",
                "21d152e0-2c94-4d74-b320-2d2d6cc599c1",
                "7ddd6763-b881-4216-aef8-7cb59a37d33d",
                "cc697553-8363-42ce-9699-ba6b75b8ecd6",
                "e127b4dc-1a12-4cac-8e49-3e04eba1941a",
                "3c36bdf0-fe46-4d7c-8dfe-9478a1aec526"
              ],
              "failures": [
                "fc80ab6a-267a-4b0f-bab4-d887f0d8c324",
                "0aa358de-527d-4211-96ca-bb6e94c747cf",
                "ce8bef97-62af-42cc-8e8c-c6e53e82775d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6178,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5f01a3ea-0cdc-463e-9913-8964fff38422",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve tentar cadastrar um produto sem ser administrador",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar um produto sem ser administrador",
                  "timedOut": null,
                  "duration": 548,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoSemSerAdmin().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 403);\n  _validaServerest.default.cadastroDeProdutoSemSerAdmin(resposta);\n});",
                  "err": {},
                  "uuid": "4f5ddcc9-f802-42a2-8afa-2201e4ee48c1",
                  "parentUUID": "5f01a3ea-0cdc-463e-9913-8964fff38422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar editar um produto sem ser administrador",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar editar um produto sem ser administrador",
                  "timedOut": null,
                  "duration": 553,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoSemSerAdmin().then(resposta => {\n  cy.contractValidation(resposta, 'put-produtos-id', 403);\n  _validaServerest.default.edicaoDeProdutoSemSerAdmin(resposta);\n});",
                  "err": {},
                  "uuid": "0d500ade-a121-4521-bce8-de3c69664a48",
                  "parentUUID": "5f01a3ea-0cdc-463e-9913-8964fff38422",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f5ddcc9-f802-42a2-8afa-2201e4ee48c1",
                "0d500ade-a121-4521-bce8-de3c69664a48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1101,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "db2d942f-43ec-44f6-ab17-48d1a2dc3910",
            "e659d415-a90e-4f19-be63-2421da6dae79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 409,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}