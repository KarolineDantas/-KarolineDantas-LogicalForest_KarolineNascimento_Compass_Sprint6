{
  "stats": {
    "suites": 2,
    "tests": 9,
    "passes": 3,
    "pending": 0,
    "failures": 6,
    "start": "2022-09-19T14:55:49.789Z",
    "end": "2022-09-19T14:55:54.019Z",
    "duration": 4230,
    "testsRegistered": 9,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1ed57fe5-a181-483b-82c6-2089daa981fb",
      "title": "",
      "fullFile": "cypress/integration/segundoFluxo.spec.js",
      "file": "cypress/integration/segundoFluxo.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89228bd1-712f-4db5-8698-e6d0e77a2b4e",
          "title": "Segundo fluxo para automação",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de cadastro com email já utilizado",
              "fullTitle": "Segundo fluxo para automação Tentativa de cadastro com email já utilizado",
              "timedOut": null,
              "duration": 369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioSemSucesso(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Este email já está sendo usado'",
                "estack": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Este email já está sendo usado'\n    at Function.validarCadastroUsuarioSemSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:677:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:206:32)",
                "diff": "- 'Cadastro realizado com sucesso'\n+ 'Este email já está sendo usado'\n"
              },
              "uuid": "d27985a6-709e-45f1-a79e-02d8cd1eefea",
              "parentUUID": "89228bd1-712f-4db5-8698-e6d0e77a2b4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com email inválido",
              "fullTitle": "Segundo fluxo para automação Tentativa de cadastro com email inválido",
              "timedOut": null,
              "duration": 311,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioEmailInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioEmailInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'Email deve ser um email válido'",
                "estack": "AssertionError: expected undefined to equal 'Email deve ser um email válido'\n    at Function.validarCadastroUsuarioEmailInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:681:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:213:32)",
                "diff": null
              },
              "uuid": "ed80acde-0e8f-4112-a50b-1aaa2b5a90af",
              "parentUUID": "89228bd1-712f-4db5-8698-e6d0e77a2b4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com senha inválida",
              "fullTitle": "Segundo fluxo para automação Tentativa de cadastro com senha inválida",
              "timedOut": null,
              "duration": 357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioSenhaInvalida().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioSenhaInvalida(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Senha deve conter no mínimo 4 caracteres'",
                "estack": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Senha deve conter no mínimo 4 caracteres'\n    at Function.validarCadastroUsuarioSenhaInvalida (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:685:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:220:32)",
                "diff": "- 'Cadastro realizado com sucesso'\n+ 'Senha deve conter no mínimo 4 caracteres'\n"
              },
              "uuid": "86270e64-dee6-4ff8-90aa-be1ca4d99ea3",
              "parentUUID": "89228bd1-712f-4db5-8698-e6d0e77a2b4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com nome inválido",
              "fullTitle": "Segundo fluxo para automação Tentativa de cadastro com nome inválido",
              "timedOut": null,
              "duration": 363,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioNomeInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioNomeInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'Este email já está sendo usado' to equal 'Nome inválido, tente novamente'",
                "estack": "AssertionError: expected 'Este email já está sendo usado' to equal 'Nome inválido, tente novamente'\n    at Function.validarCadastroUsuarioNomeInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:689:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:227:32)",
                "diff": "- 'Este email já está sendo usado'\n+ 'Nome inválido, tente novamente'\n"
              },
              "uuid": "71302179-b369-4890-8846-c7afda573a62",
              "parentUUID": "89228bd1-712f-4db5-8698-e6d0e77a2b4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro de usuário com sucesso",
              "fullTitle": "Segundo fluxo para automação Cadastro de usuário com sucesso",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_factory.default.gerarUsuario;\n_serverest.default.cadastrarUsuarioComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(resposta);\n});",
              "err": {},
              "uuid": "dcb8c09f-b9b6-4361-aa31-251780694d99",
              "parentUUID": "89228bd1-712f-4db5-8698-e6d0e77a2b4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "ec48d816-6756-440a-8d2f-834503c1b153",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve consultar os produtos da loja",
                  "fullTitle": "Segundo fluxo para automação Logar com sucesso Deve consultar os produtos da loja",
                  "timedOut": null,
                  "duration": 594,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(resposta);\n});",
                  "err": {},
                  "uuid": "5d91b4b8-f816-4c8d-9486-2d971b50087f",
                  "parentUUID": "ec48d816-6756-440a-8d2f-834503c1b153",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar carrinho com sucesso",
                  "fullTitle": "Segundo fluxo para automação Logar com sucesso Deve cadastrar carrinho com sucesso",
                  "timedOut": null,
                  "duration": 691,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 201);\n  _validaServerest.default.validarCadastroDeCarrinhoComSucesso(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Não é permitido ter mais de 1 carrinho' to equal 'Cadastro realizado com sucesso'",
                    "estack": "AssertionError: expected 'Não é permitido ter mais de 1 carrinho' to equal 'Cadastro realizado com sucesso'\n    at Function.validarCadastroDeCarrinhoComSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:669:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\segundoFluxo.spec.js:260:34)",
                    "diff": "- 'Não é permitido ter mais de 1 carrinho'\n+ 'Cadastro realizado com sucesso'\n"
                  },
                  "uuid": "b9f20f37-684b-42c5-ac21-9d2d0db6fedb",
                  "parentUUID": "ec48d816-6756-440a-8d2f-834503c1b153",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho por _id com sucesso",
                  "fullTitle": "Segundo fluxo para automação Logar com sucesso Deve buscar carrinho por _id com sucesso",
                  "timedOut": null,
                  "duration": 710,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinhoPorId();\ncy.get('@idCarrinho').then(resposta => {\n  cy.contractValidation(resposta, 'get-carrinhos-id', 200);\n  _validaServerest.default.validarBuscaDeCarrinhoPorIdComSucesso(resposta);\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must be object, but receive undefined",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must be object, but receive undefined\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:227:13)",
                    "diff": null
                  },
                  "uuid": "dff8d434-7832-4b9a-869a-220bc67966ea",
                  "parentUUID": "ec48d816-6756-440a-8d2f-834503c1b153",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir compra com sucesso",
                  "fullTitle": "Segundo fluxo para automação Logar com sucesso Deve concluir compra com sucesso",
                  "timedOut": null,
                  "duration": 540,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 200);\n  _validaServerest.default.validarConclusaoDeComprasSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "3865eef5-6fcc-4b2c-a1b1-1b928e9bc04a",
                  "parentUUID": "ec48d816-6756-440a-8d2f-834503c1b153",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d91b4b8-f816-4c8d-9486-2d971b50087f",
                "3865eef5-6fcc-4b2c-a1b1-1b928e9bc04a"
              ],
              "failures": [
                "b9f20f37-684b-42c5-ac21-9d2d0db6fedb",
                "dff8d434-7832-4b9a-869a-220bc67966ea"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2535,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "dcb8c09f-b9b6-4361-aa31-251780694d99"
          ],
          "failures": [
            "d27985a6-709e-45f1-a79e-02d8cd1eefea",
            "ed80acde-0e8f-4112-a50b-1aaa2b5a90af",
            "86270e64-dee6-4ff8-90aa-be1ca4d99ea3",
            "71302179-b369-4890-8846-c7afda573a62"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1616,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}