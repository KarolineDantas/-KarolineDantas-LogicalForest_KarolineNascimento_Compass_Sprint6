{
  "stats": {
    "suites": 4,
    "tests": 39,
    "passes": 29,
    "pending": 0,
    "failures": 10,
    "start": "2022-09-27T20:08:34.300Z",
    "end": "2022-09-27T20:09:08.107Z",
    "duration": 18273,
    "testsRegistered": 39,
    "passPercent": 74.35897435897436,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "decf2015-ff92-4496-8622-d209020be74d",
      "title": "",
      "fullFile": "cypress/integration/login.spec.js",
      "file": "cypress/integration/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2aaa9058-efdb-4101-b965-ae5034781b19",
          "title": "Testes para a rota de login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Logar sem sucesso",
              "fullTitle": "Testes para a rota de login Logar sem sucesso",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.logarSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "727f7603-62aa-4d0b-80cb-45f1dc490274",
              "parentUUID": "2aaa9058-efdb-4101-b965-ae5034781b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login sem email",
              "fullTitle": "Testes para a rota de login Tentativa de login sem email",
              "timedOut": null,
              "duration": 295,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.loginSemEmail().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemEmail(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'email não pode ficar em branco'",
                "estack": "AssertionError: expected undefined to equal 'email não pode ficar em branco'\n    at Function.validarLoginSemEmail (https://serverest.dev/__cypress/tests?p=cypress\\integration\\login.spec.js:785:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\login.spec.js:236:32)",
                "diff": null
              },
              "uuid": "a037679c-b86a-4a83-ba59-40917bd88e79",
              "parentUUID": "2aaa9058-efdb-4101-b965-ae5034781b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login sem senha",
              "fullTitle": "Testes para a rota de login Tentativa de login sem senha",
              "timedOut": null,
              "duration": 307,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.loginSemSenha().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginSemSenha(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'Senha inválida, digite novamente'",
                "estack": "AssertionError: expected undefined to equal 'Senha inválida, digite novamente'\n    at Function.validarLoginSemSenha (https://serverest.dev/__cypress/tests?p=cypress\\integration\\login.spec.js:789:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\login.spec.js:243:32)",
                "diff": null
              },
              "uuid": "a94af8c4-969e-424a-99cc-51c3bf8828e9",
              "parentUUID": "2aaa9058-efdb-4101-b965-ae5034781b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de login com e-mail inválido",
              "fullTitle": "Testes para a rota de login Tentativa de login com e-mail inválido",
              "timedOut": null,
              "duration": 307,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.loginEmailInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-login', 400);\n  _validaServerest.default.validarLoginEmailInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'Email deve ser um email válido'",
                "estack": "AssertionError: expected undefined to equal 'Email deve ser um email válido'\n    at Function.validarLoginEmailInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\login.spec.js:793:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\login.spec.js:250:32)",
                "diff": null
              },
              "uuid": "1a915a7b-3790-4a8f-92e7-15193367b477",
              "parentUUID": "2aaa9058-efdb-4101-b965-ae5034781b19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve logar com sucesso",
              "fullTitle": "Testes para a rota de login Deve logar com sucesso",
              "timedOut": null,
              "duration": 406,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioParaLogin();\ncy.get('@usuarioLogin').then(usuario => {\n  _serverest.default.logar(usuario).then(res => {\n    _serverest.default.salvarBearer(res);\n  });\n});",
              "err": {},
              "uuid": "4b7b9c10-fb7c-4917-8f00-a7975dfeb3ba",
              "parentUUID": "2aaa9058-efdb-4101-b965-ae5034781b19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "727f7603-62aa-4d0b-80cb-45f1dc490274",
            "4b7b9c10-fb7c-4917-8f00-a7975dfeb3ba"
          ],
          "failures": [
            "a037679c-b86a-4a83-ba59-40917bd88e79",
            "a94af8c4-969e-424a-99cc-51c3bf8828e9",
            "1a915a7b-3790-4a8f-92e7-15193367b477"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1529,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "570a1f93-68a9-4c17-a976-08a3f29e0daa",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "443da0e0-eb22-426b-b8b1-f540d1b152a9",
          "title": "Testes para a rota produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cadastro de usuário com sucesso",
              "fullTitle": "Testes para a rota produtos Cadastro de usuário com sucesso",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_factory.default.gerarUsuario;\n_serverest.default.cadastrarUsuarioComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroUsuarioSucesso(resposta);\n});",
              "err": {},
              "uuid": "db2d942f-43ec-44f6-ab17-48d1a2dc3910",
              "parentUUID": "443da0e0-eb22-426b-b8b1-f540d1b152a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro de usuário não administrador com sucesso",
              "fullTitle": "Testes para a rota produtos Cadastro de usuário não administrador com sucesso",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioNaoAdm().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroUsuarioSucesso(resposta);\n});",
              "err": {},
              "uuid": "e659d415-a90e-4f19-be63-2421da6dae79",
              "parentUUID": "443da0e0-eb22-426b-b8b1-f540d1b152a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "148323e6-6e75-4e33-b7de-10b2610f8f12",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve consultar os produtos da loja",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve consultar os produtos da loja",
                  "timedOut": null,
                  "duration": 585,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutos().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos', 200);\n  _validaServerest.default.validarBuscaDeProdutos(resposta);\n});",
                  "err": {},
                  "uuid": "c444391b-da11-4c3b-93ed-cf8e9e2ee182",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar um produto sem estar logado",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar um produto sem estar logado",
                  "timedOut": null,
                  "duration": 549,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoSemLogin().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 401);\n  _validaServerest.default.validarCadastroProdutoSemLogin(resposta);\n});",
                  "err": {},
                  "uuid": "01e4033b-d670-4db9-97c2-e1ff6c9f394a",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar um produto já existente",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar um produto já existente",
                  "timedOut": null,
                  "duration": 551,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoDuplicado().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 400);\n  _validaServerest.default.validarProdutoDuplicado(resposta);\n});",
                  "err": {},
                  "uuid": "21d152e0-2c94-4d74-b320-2d2d6cc599c1",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar um novo produto com sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve cadastrar um novo produto com sucesso",
                  "timedOut": null,
                  "duration": 566,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastrarProdutoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 200);\n  _validaServerest.default.validarCadastroDeProdutoComSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "7ddd6763-b881-4216-aef8-7cb59a37d33d",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar produto com quantidade menor que 0",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar produto com quantidade menor que 0",
                  "timedOut": null,
                  "duration": 785,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoQtdeInvalida().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 400);\n  _validaServerest.default.validarProdutoQtdeInvalida(resposta);\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:258:13)",
                    "diff": null
                  },
                  "uuid": "fc80ab6a-267a-4b0f-bab4-d887f0d8c324",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar produto com preço negativo",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar produto com preço negativo",
                  "timedOut": null,
                  "duration": 749,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoPrecoInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 400);\n  _validaServerest.default.validarProdutoPrecoInvalido(resposta);\n});",
                  "err": {
                    "message": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined",
                    "estack": "Error: Erros encontrados na validação de contrato, por favor verifique: \n must have required property 'message', but receive undefined\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\support\\index.js:258:13)",
                    "diff": null
                  },
                  "uuid": "0aa358de-527d-4211-96ca-bb6e94c747cf",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve editar um produto com sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve editar um produto com sucesso",
                  "timedOut": null,
                  "duration": 556,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'put-produtos-id', 200);\n  _validaServerest.default.validarEdicaoProdutoSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "cc697553-8363-42ce-9699-ba6b75b8ecd6",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar um produto sem nome",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve cadastrar um produto sem nome",
                  "timedOut": null,
                  "duration": 721,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroSemNome().then(resposta => {\n  _validaServerest.default.validarProdutoSemNome(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Já existe produto com esse nome' to equal 'Cadastro realizado com sucesso'",
                    "estack": "AssertionError: expected 'Já existe produto com esse nome' to equal 'Cadastro realizado com sucesso'\n    at Function.validarProdutoSemNome (https://serverest.dev/__cypress/tests?p=cypress\\integration\\produtos.spec.js:959:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\produtos.spec.js:295:34)",
                    "diff": "- 'Já existe produto com esse nome'\n+ 'Cadastro realizado com sucesso'\n"
                  },
                  "uuid": "ce8bef97-62af-42cc-8e8c-c6e53e82775d",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar o produto pelo id sem sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve buscar o produto pelo id sem sucesso",
                  "timedOut": null,
                  "duration": 565,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoPeloIdSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos-id', 400);\n  _validaServerest.default.validarBuscaDeProdutoPeloIdSemSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "e127b4dc-1a12-4cac-8e49-3e04eba1941a",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar o produto pelo id com sucesso",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve buscar o produto pelo id com sucesso",
                  "timedOut": null,
                  "duration": 551,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarProdutoCadastradoPeloId().then(resposta => {\n  cy.contractValidation(resposta, 'get-produtos-id', 200);\n  _validaServerest.default.validarBuscaDeProdutoPeloId(resposta);\n});",
                  "err": {},
                  "uuid": "3c36bdf0-fe46-4d7c-8dfe-9478a1aec526",
                  "parentUUID": "148323e6-6e75-4e33-b7de-10b2610f8f12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c444391b-da11-4c3b-93ed-cf8e9e2ee182",
                "01e4033b-d670-4db9-97c2-e1ff6c9f394a",
                "21d152e0-2c94-4d74-b320-2d2d6cc599c1",
                "7ddd6763-b881-4216-aef8-7cb59a37d33d",
                "cc697553-8363-42ce-9699-ba6b75b8ecd6",
                "e127b4dc-1a12-4cac-8e49-3e04eba1941a",
                "3c36bdf0-fe46-4d7c-8dfe-9478a1aec526"
              ],
              "failures": [
                "fc80ab6a-267a-4b0f-bab4-d887f0d8c324",
                "0aa358de-527d-4211-96ca-bb6e94c747cf",
                "ce8bef97-62af-42cc-8e8c-c6e53e82775d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 6178,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5f01a3ea-0cdc-463e-9913-8964fff38422",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve tentar cadastrar um produto sem ser administrador",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar cadastrar um produto sem ser administrador",
                  "timedOut": null,
                  "duration": 548,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroProdutoSemSerAdmin().then(resposta => {\n  cy.contractValidation(resposta, 'post-produtos', 403);\n  _validaServerest.default.cadastroDeProdutoSemSerAdmin(resposta);\n});",
                  "err": {},
                  "uuid": "4f5ddcc9-f802-42a2-8afa-2201e4ee48c1",
                  "parentUUID": "5f01a3ea-0cdc-463e-9913-8964fff38422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar editar um produto sem ser administrador",
                  "fullTitle": "Testes para a rota produtos Logar com sucesso Deve tentar editar um produto sem ser administrador",
                  "timedOut": null,
                  "duration": 553,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.editarProdutoSemSerAdmin().then(resposta => {\n  cy.contractValidation(resposta, 'put-produtos-id', 403);\n  _validaServerest.default.edicaoDeProdutoSemSerAdmin(resposta);\n});",
                  "err": {},
                  "uuid": "0d500ade-a121-4521-bce8-de3c69664a48",
                  "parentUUID": "5f01a3ea-0cdc-463e-9913-8964fff38422",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f5ddcc9-f802-42a2-8afa-2201e4ee48c1",
                "0d500ade-a121-4521-bce8-de3c69664a48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1101,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "db2d942f-43ec-44f6-ab17-48d1a2dc3910",
            "e659d415-a90e-4f19-be63-2421da6dae79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 409,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "46fbb0b4-4d76-42e3-8c29-04c975a48204",
      "title": "",
      "fullFile": "cypress/integration/usuarios.spec.js",
      "file": "cypress/integration/usuarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ddf7820-636a-4a85-bae1-1afdaa045231",
          "title": "Testes para a rota usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tentativa de cadastro com email já utilizado",
              "fullTitle": "Testes para a rota usuários Tentativa de cadastro com email já utilizado",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastrarUsuarioSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "e3159132-0e8b-4a77-9b11-858a932a015c",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com email inválido",
              "fullTitle": "Testes para a rota usuários Tentativa de cadastro com email inválido",
              "timedOut": null,
              "duration": 368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioEmailInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioEmailInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal 'Email deve ser um email válido'",
                "estack": "AssertionError: expected undefined to equal 'Email deve ser um email válido'\n    at Function.validarCadastroUsuarioEmailInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\usuarios.spec.js:836:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\usuarios.spec.js:236:32)",
                "diff": null
              },
              "uuid": "c182dc00-1024-462a-84b3-20d44e1cf8d7",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com senha de 1 caractere",
              "fullTitle": "Testes para a rota usuários Tentativa de cadastro com senha de 1 caractere",
              "timedOut": null,
              "duration": 324,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioSenhaInvalida().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioSenhaInvalida(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Senha deve conter no mínimo 4 caracteres'",
                "estack": "AssertionError: expected 'Cadastro realizado com sucesso' to equal 'Senha deve conter no mínimo 4 caracteres'\n    at Function.validarCadastroUsuarioSenhaInvalida (https://serverest.dev/__cypress/tests?p=cypress\\integration\\usuarios.spec.js:840:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\usuarios.spec.js:243:32)",
                "diff": "- 'Cadastro realizado com sucesso'\n+ 'Senha deve conter no mínimo 4 caracteres'\n"
              },
              "uuid": "ff85e024-3fdb-4c9b-9597-f4ed34d9eb5f",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro sem nome",
              "fullTitle": "Testes para a rota usuários Tentativa de cadastro sem nome",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioNomeInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroUsuarioNomeInvalido(resposta);\n});",
              "err": {},
              "uuid": "2b625e41-d7ad-4e5e-a375-71a5dd8aa4dc",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tentativa de cadastro com administrador incorreto",
              "fullTitle": "Testes para a rota usuários Tentativa de cadastro com administrador incorreto",
              "timedOut": null,
              "duration": 343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_serverest.default.cadastroUsuarioAdmInvalido().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 400);\n  _validaServerest.default.validarCadastroAdmInvalido(resposta);\n});",
              "err": {
                "message": "AssertionError: expected 'administrador deve ser \\'true\\' ou \\'false\\'' to equal 'administrador deve ser true ou false'",
                "estack": "AssertionError: expected 'administrador deve ser \\'true\\' ou \\'false\\'' to equal 'administrador deve ser true ou false'\n    at Function.validarCadastroAdmInvalido (https://serverest.dev/__cypress/tests?p=cypress\\integration\\usuarios.spec.js:848:47)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\usuarios.spec.js:257:32)",
                "diff": "- 'administrador deve ser \\'true\\' ou \\'false\\''\n+ 'administrador deve ser true ou false'\n"
              },
              "uuid": "bae2d388-a086-477f-a246-bcc1f61cd505",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar todos os usuários cadastrados na Serverest",
              "fullTitle": "Testes para a rota usuários Deve buscar todos os usuários cadastrados na Serverest",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarios().then(resposta => {\n  cy.contractValidation(resposta, 'get-usuarios', 200);\n  _validaServerest.default.validarBuscaDeUsuarios(resposta);\n});",
              "err": {},
              "uuid": "3ca1d1e8-686b-41ac-b5f6-f43d66fa88fc",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastro de usuário com sucesso",
              "fullTitle": "Testes para a rota usuários Cadastro de usuário com sucesso",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_factory.default.gerarUsuario;\n_serverest.default.cadastrarUsuarioComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-usuarios', 201);\n  _validaServerest.default.validarCadastroUsuarioSucesso(resposta);\n});",
              "err": {},
              "uuid": "78ea4859-d109-4e68-ac33-bbb5d279d534",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar um usuário pelo _id sem sucessso",
              "fullTitle": "Testes para a rota usuários Deve buscar um usuário pelo _id sem sucessso",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorIdSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'get-usuarios-id', 400);\n  _validaServerest.default.validarBuscaDeUsuarioPeloIdSemSucesso(resposta);\n});",
              "err": {},
              "uuid": "f87e8ce3-f722-4fc0-96d3-9c7cf8d5143a",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve buscar um usuário pelo _id com sucessso",
              "fullTitle": "Testes para a rota usuários Deve buscar um usuário pelo _id com sucessso",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_serverest.default.buscarUsuarioPorId().then(resposta => {\n  cy.contractValidation(resposta, 'get-usuarios-id', 200);\n  _validaServerest.default.validarBuscaDeUsuarioPorIdSucesso(resposta);\n});",
              "err": {},
              "uuid": "790bcbbd-ae68-45d9-a986-3810f3d2eb06",
              "parentUUID": "3ddf7820-636a-4a85-bae1-1afdaa045231",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3159132-0e8b-4a77-9b11-858a932a015c",
            "2b625e41-d7ad-4e5e-a375-71a5dd8aa4dc",
            "3ca1d1e8-686b-41ac-b5f6-f43d66fa88fc",
            "78ea4859-d109-4e68-ac33-bbb5d279d534",
            "f87e8ce3-f722-4fc0-96d3-9c7cf8d5143a",
            "790bcbbd-ae68-45d9-a986-3810f3d2eb06"
          ],
          "failures": [
            "c182dc00-1024-462a-84b3-20d44e1cf8d7",
            "ff85e024-3fdb-4c9b-9597-f4ed34d9eb5f",
            "bae2d388-a086-477f-a246-bcc1f61cd505"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2221,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "194b3af0-c363-4f84-8d5d-bc3f1baf7fe6",
      "title": "",
      "fullFile": "cypress/integration/carrinhos.spec.js",
      "file": "cypress/integration/carrinhos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a700f888-9d93-4ed8-a454-063a2bfe810e",
          "title": "Testes para a rota carrinhos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c980500e-3a22-400c-85fe-ec3fa952919b",
              "title": "Logar com sucesso",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve consultar os carrinhos cadastrados",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve consultar os carrinhos cadastrados",
                  "timedOut": null,
                  "duration": 939,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinhos();",
                  "err": {},
                  "uuid": "6ea53b26-ea19-4ebb-aea2-f1a9decc8d41",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve tentar cadastrar carrinho sem token",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve tentar cadastrar carrinho sem token",
                  "timedOut": null,
                  "duration": 611,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroCarrinhoSemToken().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 401);\n  _validaServerest.default.validarCadastroDeCarrinhoSemToken(resposta);\n});",
                  "err": {},
                  "uuid": "b13655e2-3e26-4445-8944-31da31d6287c",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar carrinho com sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve cadastrar carrinho com sucesso",
                  "timedOut": null,
                  "duration": 570,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 201);\n  _validaServerest.default.validarCadastroDeCarrinhoComSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "6688d8cf-9ac5-43cc-b952-bf392390c82b",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar carrinho com produto inexistente",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve cadastrar carrinho com produto inexistente",
                  "timedOut": null,
                  "duration": 574,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComProdutoInexistente().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 400);\n  _validaServerest.default.validarCadastroCarrinhoProdutoInexistente(resposta);\n});",
                  "err": {},
                  "uuid": "e9b43d28-8447-4cb3-b91d-f1f5f744433d",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho pelo _id sem sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve buscar carrinho pelo _id sem sucesso",
                  "timedOut": null,
                  "duration": 562,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinhoIdSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'get-carrinhos-id', 400);\n  _validaServerest.default.validarBuscaDeCarrinhoPorIdSemSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "5762926c-da69-4745-912a-ed492f1ab6e4",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve buscar carrinho pelo _id com sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve buscar carrinho pelo _id com sucesso",
                  "timedOut": null,
                  "duration": 571,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.buscarCarrinhoId().then(resposta => {\n  cy.contractValidation(resposta, 'get-carrinhos-id', 200);\n  _validaServerest.default.validarBuscaDeCarrinhoPorIdComSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "cdc101d0-651e-4038-a616-6f0405954352",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cancelar compra sem sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve cancelar compra sem sucesso",
                  "timedOut": null,
                  "duration": 561,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompraSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 401);\n  _validaServerest.default.validarConclusaoDeComprasSemSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "3f17d020-f0db-4994-a77f-d01fff582b64",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cancelar compra com sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso Deve cancelar compra com sucesso",
                  "timedOut": null,
                  "duration": 766,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cancelarCompraComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 200);\n  _validaServerest.default.validarConclusaoDeComprasSucesso(resposta);\n});",
                  "err": {
                    "message": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'",
                    "estack": "AssertionError: expected 'Registro excluído com sucesso. Estoque dos produtos reabastecido' to equal 'Registro excluído com sucesso'\n    at Function.validarConclusaoDeComprasSucesso (https://serverest.dev/__cypress/tests?p=cypress\\integration\\carrinhos.spec.js:959:41)\n    at Context.eval (https://serverest.dev/__cypress/tests?p=cypress\\integration\\carrinhos.spec.js:284:34)",
                    "diff": "- 'Registro excluído com sucesso. Estoque dos produtos reabastecido'\n+ 'Registro excluído com sucesso'\n"
                  },
                  "uuid": "78779922-1ea9-4ab0-93a0-b11f75cf474d",
                  "parentUUID": "c980500e-3a22-400c-85fe-ec3fa952919b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ea53b26-ea19-4ebb-aea2-f1a9decc8d41",
                "b13655e2-3e26-4445-8944-31da31d6287c",
                "6688d8cf-9ac5-43cc-b952-bf392390c82b",
                "e9b43d28-8447-4cb3-b91d-f1f5f744433d",
                "5762926c-da69-4745-912a-ed492f1ab6e4",
                "cdc101d0-651e-4038-a616-6f0405954352",
                "3f17d020-f0db-4994-a77f-d01fff582b64"
              ],
              "failures": [
                "78779922-1ea9-4ab0-93a0-b11f75cf474d"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5154,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0217c9e9-8778-4a75-b9db-9662f321349c",
              "title": "Logar com sucesso pela segunda vez",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve concluir compra sem sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso pela segunda vez Deve concluir compra sem sucesso",
                  "timedOut": null,
                  "duration": 563,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompraSemSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 401);\n  _validaServerest.default.validarConclusaoDeComprasSemSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "49ba4f77-8db2-4003-9394-31596467ce9c",
                  "parentUUID": "0217c9e9-8778-4a75-b9db-9662f321349c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve cadastrar carrinho com sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso pela segunda vez Deve cadastrar carrinho com sucesso",
                  "timedOut": null,
                  "duration": 555,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.cadastroDeCarrinhoComSucesso().then(resposta => {\n  cy.contractValidation(resposta, 'post-carrinhos', 201);\n  _validaServerest.default.validarCadastroDeCarrinhoComSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "b6381876-55a1-4572-b17f-a777a4fd7757",
                  "parentUUID": "0217c9e9-8778-4a75-b9db-9662f321349c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve concluir compra com sucesso",
                  "fullTitle": "Testes para a rota carrinhos Logar com sucesso pela segunda vez Deve concluir compra com sucesso",
                  "timedOut": null,
                  "duration": 563,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_serverest.default.concluirCompra().then(resposta => {\n  cy.contractValidation(resposta, 'delete-carrinhos', 200);\n  _validaServerest.default.validarConclusaoDeComprasSucesso(resposta);\n});",
                  "err": {},
                  "uuid": "0e3b6747-25db-4274-998a-9c10fd9b1473",
                  "parentUUID": "0217c9e9-8778-4a75-b9db-9662f321349c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49ba4f77-8db2-4003-9394-31596467ce9c",
                "b6381876-55a1-4572-b17f-a777a4fd7757",
                "0e3b6747-25db-4274-998a-9c10fd9b1473"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1681,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}